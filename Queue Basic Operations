import numpy as np

class QueueL:
    def __init__(self, size):
        self.front = -1
        self.rear = -1
        self.arr = np.array([0] * size)
        self.max_size = size  # Storing the maximum size of the queue

    def isempty(self):
        return self.front == -1  # -1 means the queue is empty

    def isfull(self):
        return self.rear == self.max_size - 1  # If rear reaches the last index

    def size(self):
        return self.max_size

    def peek(self):
        if self.isempty():
            print("Queue is empty")
            return None
        return self.arr[self.front]

    def enqueue(self, item):
        if self.isfull():
            print("Queue is full")
        else:
            if self.front == -1:  # If queue is empty, set front to 0
                self.front = 0
            self.rear += 1  # Increment rear
            self.arr[self.rear] = item  # Add element to the queue
            print(f"{item} added to the queue")

    def dequeue(self):
        if self.isempty():
            print("Queue is empty")
            return None
        else:
            dequeue_item = self.arr[self.front]  # Get the front element
            if self.front == self.rear:  # If only one element is left
                self.front = self.rear = -1  # Reset queue
            else:
                self.front += 1  # Move front to the next element
            print(f"{dequeue_item} removed from the queue")
            return dequeue_item

    def display(self):
        if self.isempty():
            print("Queue is empty")
        else:
            print("Queue elements:", self.arr[self.front:self.rear + 1])

# User input for queue size
len_arr = int(input("Enter the size of the queue: "))
q = QueueL(len_arr)

while True:
    print("\nProgram to implement the queue")
    print("1. Enqueue")
    print("2. Dequeue")
    print("3. Peek")
    print("4. Display")
    print("5. Exit")
    
    choice = int(input("Enter your choice: "))

    if choice == 1:
        item = int(input("Enter the element to enqueue: "))
        q.enqueue(item)
    elif choice == 2:
        q.dequeue()
    elif choice == 3:
        print("Front element:", q.peek())
    elif choice == 4:
        q.display()
    elif choice == 5:
        print("Exiting program.")
        break
    else:
        print("Invalid choice, try again.")
